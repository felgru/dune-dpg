Preparing the Sources
=========================

Additional to the software mentioned in README you'll need the
following programs installed on your system:

  a C++11-compatible compiler (e.g. GCC >= 4.9)
  cmake >= 2.8.6

In addition to the DUNE libraries mentioned in dune.module, you'll
need the following libraries:

  Boost Fusion >= 1.54
  ug
  UMFPACK

Getting started
---------------

If these preliminaries are met, you should run

  dunecontrol all

which will find all installed dune modules as well as all dune modules
(not installed) which sources reside in a subdirectory of the current
directory. Note that if dune is not installed properly you will either
have to add the directory where the dunecontrol script resides (probably
./dune-common/bin) to your path or specify the relative path of the script.

On your project and all uninstalled DUNE source modules found the script
will then call CMake to create the Makefiles. Afterwards the modules will
be build using make all

Most probably you'll have to provide additional information to dunecontrol
(e. g. compilers, configure options) and/or make options.

The most convenient way is to use an options file in this case. This file
defines two variables:

CMAKE_FLAGS      flags passed to cmake
MAKE_FLAGS       flags passed to make

An example options file might look like this:

#use this options to cmake and make if no other options are given
CMAKE_FLAGS=" \
-DCMAKE_CXX_COMPILER=g++-4.9 \
-DCMAKE_CXX_FLAGS='-Wall -pedantic' \
-DCMAKE_INSTALL_PREFIX=/install/path" #Force g++-4.9 and set compiler flags
MAKE_FLAGS=install #Per default run make install instead of simply make

If you save this information into example.opts you can pass the opts file to
dunecontrol via the --opts option, e. g.

  dunecontrol --opts=example.opts all

More info
---------

See

     dunecontrol --help

for further options.


The full build-system is described in the dune-common/doc/buildsystem (Git version) or under share/doc/dune-common/buildsystem if you installed DUNE!

Running example programs
------------------------

[It is assumed that all the following commands are run from the build directory
 and that the build directory is a subdirectory of the dune-dpg root directory.]

To regenerate the convergence plots from the paper, it is advised to compile
the test programs in release mode, to significantly speed up the computations.
The release mode can be configured with

    cmake -DCMAKE_BUILD_TYPE=Release .

Afterwards, we can compile the test programs with

    make

To run the test programs with the right parameters, call

    ../scripts/run_convergence_test.sh

This will take quite a while. (you can first adapt this script if you
want to change the grid parameter n=1/H)

Finally, the convergence plots can be generated with

    ../scripts/convergence_plots.py

License
-------

Licensing information for dune-dpg can be found in the accompanying file
COPYING.
